OverUsed1825 = read.csv('gen7ou-1825.txt',skip = 2)
OUPokemon1500 <- merge(Pokemon.Attributes,OverUsed1500,by="Pokemon")
OUPokemon1695 <- merge(Pokemon.Attributes,OverUsed1695,by="Pokemon")
OUPokemon1825 <- merge(Pokemon.Attributes,OverUsed1825,by="Pokemon")
ggplot(OUPokemon, aes(x=Pokemon, y=Raw, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=Pokemon, y=Raw)) + geom_histogram()
ggplot(OUPokemon, aes(x=Pokemon, fill=Raw, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=Raw, fill=Raw, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=Raw, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=Raw, fill=Usage.Category, color=Usage.Category)) + geom_histogram()
View(OUPokemon)
head(OUPokemon$Raw)
OUPokemon <- OUPokemon[order(OUPokemon$Raw),]
ggplot(OUPokemon, aes(x=Raw, fill=Usage.Category, color=Usage.Category)) + geom_histogram()
head(OUPokemon$Raw)
OUPokemon <- OUPokemon[order(OUPokemon$Raw,decreasing = TRUE),]
head(OUPokemon$Raw)
ggplot(OUPokemon, aes(x=Raw, fill=Usage.Category, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=log(Raw+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=log(Raw+2), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
dettach(Pokemon.Attributes)
detach(Pokemon.Attributes)
detach(OUPokemon)
detach(RUPokemon)
detach(RUPokemon)
ggplot(OUPokemon, aes(x=log(Raw+2), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
head(log(OUPokemon$Raw))
tail(log(OUPokemon$Raw))
tail(OUPokemon$Raw)
View(OUPokemon)
ggplot(OUPokemon, aes(x=Raw, fill=Usage.Category, color=Usage.Category)) + geom_histogram()
log(
ggplot(OUPokemon, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
;
ggplot(OUPokemon, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p <- ggplot(OUPokemon, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1500 <- ggplot(OUPokemon1500, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1695 <- ggplot(OUPokemon1695, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1825 <- ggplot(OUPokemon1825, aes(x=log(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
multiplot(p, p1500, p1695, p1825)
p + p1500 + p1695 + p1825
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p, p1500, p1695, p1825)
p <- ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1500 <- ggplot(OUPokemon1500, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1695 <- ggplot(OUPokemon1695, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1825 <- ggplot(OUPokemon1825, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(p, p1500, p1695, p1825)
OUPokemon <- merge(Pokemon.Attributes,OverUsed,by="Pokemon")
OUPokemon1500 <- merge(Pokemon.Attributes,OverUsed1500,by="Pokemon",so)
OUPokemon1695 <- merge(Pokemon.Attributes,OverUsed1695,by="Pokemon")
OUPokemon1825 <- merge(Pokemon.Attributes,OverUsed1825,by="Pokemon")
head(order(OUPokemon$Raw,decreasing = TRUE))
OUPokemon <- merge(Pokemon.Attributes,OverUsed,by="Pokemon")
head(order(OUPokemon$Raw,decreasing = TRUE))
head(order(OUPokemon$Raw))
Pokemon.Attributes = read.csv('Pokeys.csv')
OverUsed = read.csv('gen7ou-0.txt',skip = 2)
OverUsed1500 = read.csv('gen7ou-1500.txt',skip = 2)
OverUsed1695 = read.csv('gen7ou-1695.txt',skip = 2)
OverUsed1825 = read.csv('gen7ou-1825.txt',skip = 2)
OUPokemon <- merge(Pokemon.Attributes,OverUsed,by="Pokemon")
head(OUPokemon[order(OUPokemon$Raw,decreasing = TRUE),])
head(OUPokemon[order(OUPokemon$Raw,decreasing = TRUE),]$Raw)
head(OUPokemon1500[order(OUPokemon$Raw,decreasing = TRUE),]$Raw)
head(OUPokemon1500[order(OUPokemon$Raw),]$Raw)
p1825 <- ggplot(OUPokemon1825, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(p, p1500, p1695, p1825)
ggplot(OUPokemon, aes(x=Raw.percentage, fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p <- ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pre <- ggplot(OUPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(p, pre)
p1500 <- ggplot(OUPokemon1500, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1695 <- ggplot(OUPokemon1695, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
p1825 <- ggplot(OUPokemon1825, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(pre, p1500, p1695, p1825)
RUPokemon <- merge(Pokemon.Attributes,RandomBattle,by="Pokemon")
UUPokemon <- merge(Pokemon.Attributes,UnderUsed,by="Pokemon")
UberPokemon <- merge(Pokemon.Attributes,Uber,by="Pokemon")
LCPokemon <- merge(Pokemon.Attributes,LC,by="Pokemon")
pOU <- ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUU <- ggplot(UUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUber <- ggplot(UberPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
Uber = read.csv('gen7ubers-0.txt',skip = 2)
UberPokemon <- merge(Pokemon.Attributes,Uber,by="Pokemon")
LCPokemon <- merge(Pokemon.Attributes,LC,by="Pokemon")
LC = read.csv('gen7lc-0.txt',skip = 2)
LCPokemon <- merge(Pokemon.Attributes,LC,by="Pokemon")
pOU <- ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUU <- ggplot(UUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUber <- ggplot(UberPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pLC <- ggplot(LCPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pRandom <- ggplot(RUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(pUber, pOU, pUU, PLC, pRandom)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOURe <- ggplot(OUPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUURe <- ggplot(UUPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUberRe <- ggplot(UberPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pLCRe <- ggplot(LCPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pRandomRe <- ggplot(RUPokemon, aes(x=log2(Real), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(pUber,pUberRe, pOU,pOURe, pUU,pUURe, pLC,pLCRe, pRandom,pRandomRe, ncol=2)
pOURe <- ggplot(OUPokemon, aes(x=log2(Real+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUURe <- ggplot(UUPokemon, aes(x=log2(Real+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pUberRe <- ggplot(UberPokemon, aes(x=log2(Real+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pLCRe <- ggplot(LCPokemon, aes(x=log2(Real+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
pRandomRe <- ggplot(RUPokemon, aes(x=log2(Real+1), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
grid.arrange(pUber,pUberRe, pOU,pOURe, pUU,pUURe, pLC,pLCRe, pRandom,pRandomRe, ncol=2)
ggplot(Pokemon.Attributes,aes(x=Usage.Category,fill=Usage.Category)) + geom_histogram(stat="count")
grid.arrange(pUber,pUberRe, pOU,pOURe, pUU,pUURe, pLC,pLCRe, pRandom,pRandomRe, ncol=2)
pOU <- ggplot(OUPokemon, aes(x=log2(Raw), fill=Generation, color=Generation)) + geom_histogram()
pUU <- ggplot(UUPokemon, aes(x=log2(Raw), fill=Generation, color=Generation)) + geom_histogram()
pUber <- ggplot(UberPokemon, aes(x=log2(Raw), fill=Generation, color=Generation)) + geom_histogram()
pLC <- ggplot(LCPokemon, aes(x=log2(Raw), fill=Generation, color=Generation)) + geom_histogram()
pRandom <- ggplot(RUPokemon, aes(x=log2(Raw), fill=Generation, color=Generation)) + geom_histogram()
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(OUPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pOU <- ggplot(OUPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUU <- ggplot(UUPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUber <- ggplot(UberPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pLC <- ggplot(LCPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pRandom <- ggplot(RUPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(OUPokemon, aes(x=Raw.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pOU <- ggplot(OUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon[(OUPokemon$Real.percentage > 0),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 0.1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon[(OUPokemon$Real.percentage > 0.1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon[(OUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUU <- ggplot(OUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUber <- ggplot(OUPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pLC <- ggplot(OUPokemon[(LCPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pRandom <- ggplot(OUPokemon[(RandomPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
RUPokemon[(RUPokemon$Real.percentage > 5),]
View(RUPokemon)
summary(RUPokemon$Real.percentage)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
factor(Generation)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 7)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(UberPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
ggplot(UberPokemon[(UberPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(Pokemon.Attributes,aes(x=Generation,fill=Usage.Category)) + geom_histogram(stat="count")
head(Pokemon.Attributes[(Pokemon.Attributes$Generation==5),])
head(Pokemon.Attributes[(Pokemon.Attributes$Generation==5),]$Pokemon)
View(Pokemon.Attributes)
pOU <- ggplot(OUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUU <- ggplot(UUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUber <- ggplot(UberPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pLC <- ggplot(LCPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pRandom <- ggplot(RUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon, aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(UberPokemon[(UberPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(LCPokemon[(LCPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(UUPokemon[(UUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 3),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1.3),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1.3),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 10),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 5)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 3),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 5),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
View(UberPokemon)
order(UUPokemon[(UUPokemon$Real.percentage > 5),],decreasing = TRUE)
UUPokemon[(UUPokemon$Real.percentage > 5),]
UUPokemon[(UUPokemon$Real.percentage > 5),]$Real.percentage
UberPokemon[(UberPokemon$Real.percentage > 5),]$Real.percentage
UberPokemon$Real.percentage
summary(UberPokemon$Real.percentage)
summary(UberPokemon[(UberPokemon$Real.percentage > 5),]$Real.percentage)
summary(UberPokemon[(UberPokemon$Real.percentage > 5),]$Real.percentage)
UberPokemon[(UberPokemon$Real.percentage > 5),]$Real.percentage
UberPokemon[(UberPokemon$Real.percentage > 5),]$Pokemon
pOU <- ggplot(OUPokemon[(OUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUU <- ggplot(UUPokemon[(UUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pUber <- ggplot(UberPokemon[(UberPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pLC <- ggplot(LCPokemon[(LCPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
pRandom <- ggplot(RUPokemon[(RUPokemon$Real.percentage > 1),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
grid.arrange(pUber, pOU, pUU, pLC, pRandom)
ggplot(Pokemon.Attributes,aes(x=Usage.Category,fill=Usage.Category)) + geom_histogram(stat="count")
ggplot(Pokemon.Attributes,aes(x=Usage.Category,fill=factor(Generation))) + geom_histogram(stat="count")
OUPokemon$BST
ggplot(OUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) +
ggplot(OUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(UUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = Attack, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = Defense, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Raw), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) +
geom_point() + geom_smooth(method.args = list(degree = 1))
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1))
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(UUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(RUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(UberPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Type.1, color = Type.1)) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), color = Type.1)) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Type.1, color = Type.1)) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
View(Pokemon.Attributes)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), color = Ability.1)) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Ability.1, color = Ability.1)) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
View(Pokemon.Attributes)
View(Pokemon.Attributes)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = Attack, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = Defense, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = Special, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = Sp.Attack, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = Sp.Defense, y = log(Real+1))) + geom_point()
ggplot(OUPokemon, aes(x = HP, y = log(Real))) + geom_point()
Pokemon.Attributes = read.csv('Pokeys.csv')
View(Pokemon.Attributes)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Types, color = factor(Types))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
OUPokemon <- merge(Pokemon.Attributes,OverUsed,by="Pokemon")
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Types, color = factor(Types))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Abilities, color = factor(Abilities))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Abilities, color = factor(Abilities))) + geom_point() + geom_smooth(method.args = list(degree = 1))
OUPokemon$Real
summary(OUPokemon$Real)
summary(log(OUPokemon$Real))
summary(log(OUPokemon$Real+1))
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Type.1, color = Type.1)) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), color = Type.1)) + geom_point()
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), group = Type.1, color = Type.1)) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
install.packages("arm")
library(arm)
ggplot(OUPokemon[(OUPokemon$Real.percentage > 2),], aes(x=Real.percentage, fill=factor(Generation), color=factor(Generation))) + geom_histogram(bins = 10)
ggplot(OUPokemon, aes(x=log2(Raw), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
frisk = read.table("http://www.stat.columbia.edu/~gelman/arm/examples/police/frisk_with_noise.dat", skip = 6, header = TRUE)
frisk.sum = aggregate(cbind(past.arrests, stops) ~ precinct + eth, sum, data = frisk)
ggplot(OUPokemon, aes(x=Raw, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon, aes(x=log2(Raw+1), fill=factor(Generation), color=factor(Generation))) + geom_histogram()
ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x=Raw, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
head(frisk)
ggplot(frisk.sum, aes(x = stops, color = factor(eth), fill = factor(eth))) +
geom_histogram(breaks = seq(0, 2800, 50)) + facet_wrap(~eth, ncol = 1)
ggplot(frisk.sum, aes(x = log(stops+1), color = factor(eth), fill = factor(eth))) +
geom_histogram(breaks = seq(log(1), log(2801), log(50))) + facet_wrap(~eth, ncol = 1)
ggplot(OUPokemon, aes(x=Raw, fill=factor(Generation), color=factor(Generation))) + geom_histogram()
summary(OUPokemon$Raw)
geom_histogram(breaks = seq(0, 50000, 5000)) + facet_wrap(~Usage.Category, ncol = 1)
ggplot(OUPokemon, aes(x = Raw, color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram(breaks = seq(0, 50000, 5000)) + facet_wrap(~Usage.Category, ncol = 1)
ggplot(OUPokemon, aes(x = Raw, color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram() + facet_wrap(~Usage.Category, ncol = 1)
ggplot(OUPokemon, aes(x=log2(Raw), fill=Usage.Category, color=Usage.Category)) + geom_histogram()
ggplot(OUPokemon, aes(x = Raw, color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram()
ggplot(OUPokemon, aes(x = Raw, color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram() + facet_wrap(~Usage.Category, ncol = 1)
ggplot(OUPokemon, aes(x = log(Raw), color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram() + facet_wrap(~Usage.Category, ncol = 1)
ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
summary(OUPokemon$Raw)
ggplot(OUPokemon, aes(x = Raw, color = factor(Generation), fill = factor(Generation))) + geom_histogram() + facet_wrap(~Generation, ncol = 1)
ggplot(OUPokemon, aes(x = log(Raw), color = factor(Generation), fill = factor(Generation))) + geom_histogram() + facet_wrap(~Generation, ncol = 1)
ggplot(OUPokemon, aes(x = Raw, color = factor(Type.1), fill = factor(Type.1))) + geom_histogram() + facet_wrap(~Type.1, ncol = 1)
ggplot(OUPokemon, aes(x = log(Raw), color = factor(Type.1), fill = factor(Type.1))) + geom_histogram() + facet_wrap(~Type.1, ncol = 1)
ggplot(OUPokemon, aes(x = Raw.percentage, color = factor(Type.1), fill = factor(Type.1))) + geom_histogram() + facet_wrap(~Type.1, ncol = 1)
ggplot(OUPokemon, aes(x = log(Raw.percentage), color = factor(Type.1), fill = factor(Type.1))) + geom_histogram() + facet_wrap(~Type.1, ncol = 1)
ggplot(OUPokemon, aes(x = log(Raw), color = factor(Type.1), fill = factor(Type.1))) + geom_histogram() + facet_wrap(~Type.1, ncol = 1)
ggplot(OUPokemon, aes(x = BST, y = log(Real+1), color = factor(Generation))) + geom_point()
ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
ggplot(OUPokemon, aes(x = Raw, color = factor(Usage.Category), fill = factor(Usage.Category))) + geom_histogram()
ggplot(OUPokemon, aes(x = Raw, color = factor(Generation), fill = factor(Generation))) + geom_histogram() + facet_wrap(~Generation, ncol = 1)
ggplot(OUPokemon, aes(x = Raw, color = factor(Generation), fill = factor(Generation))) + geom_histogram()
ggplot(OUPokemon, aes(x = log(Raw), color = factor(Generation), fill = factor(Generation))) + geom_histogram() + facet_wrap(~Generation, ncol = 1)
ggplot(OUPokemon, aes(x = Raw, color = factor(Generation), fill = factor(Generation))) + geom_histogram() + facet_wrap(~Generation, ncol = 1)
constant.glm = glm(Raw ~ 1, family = poisson, data = OUPokemon)
display(constant.glm)
exp(6.37)
exp(9.61)
Poison(584)
Poisson(584)
offset.glm = glm(Raw ~ 1, family = poisson, offset = BST, data = OUPokemon)
offset.glm = glm(Raw ~ 1, family = poisson, offset = BST, data = OUPokemon,maxit=500)
display(offset.glm)
offset.glm = glm(Raw ~ 1, family = poisson, offset = BST, data = OUPokemon)
display(offset.glm)
offset.glm = glm(Raw ~ 1, family = poisson, offset = log(BST), data = OUPokemon,maxit=500)
display(offset.glm)
display(constant.glm)
offset.glm = glm(Raw ~ 1, family = poisson, offset = log(BST), data = OUPokemon)
display(offset.glm)
bst.glm = glm(Raw ~ BST, family = poisson, data = OUPokemon)
display(bst.glm)
bst.glm = glm(log(Raw) ~ BST, family = poisson, data = OUPokemon)
display(bst.glm)
warnings()
bst.glm = glm(Raw ~ BST, family = poisson, data = OUPokemon)
display(bst.glm)
display(offset.glm)
bst.glm = glm(Raw ~ BST + factor(Usage.Category), family = poisson, data = OUPokemon)
display(bst.glm)
bst.glm = glm(Raw ~ BST, family = poisson, data = OUPokemon)
display(bst.glm)
bst.UC.glm = glm(Raw ~ BST + factor(Usage.Category), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ factor(Usage.Category), family = poisson, offset = log(BST), data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ factor(Usage.Category) + factor(Generation), family = poisson, offset = log(BST), data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + defense + factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
bst.UC.glm = glm(Raw ~ Attack + Defense + factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + HP +factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + Sp.Defense + HP +factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
summary(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + Sp.Defense + HP , family = poisson, data = OUPokemon)
summary(bst.UC.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + Sp.Defense + HP +factor(Usage.Category) + factor(Generation), family = poisson, data = OUPokemon)
deviance(bst.UC.glm)
fitted = fitted.values(bst.UC.glm)
resid = residuals(bst.UC.glm, type = "response")
df = data.frame(OUPokemon, .fitted = fitted, .resid = resid)
ggplot(df, aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(span = 1,
method.args = list(degree = 1))
std.resid = resid/sqrt(fitted)
df$.std.resid = std.resid
ggplot(df, aes(x = log(.fitted), y = .std.resid)) + geom_point() +
geom_smooth(span = 1, method.args = list(degree = 1))
ggplot(df, aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
ggplot(df, aes(x = log(.fitted), y = .std.resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
View(df)
overdispersion = sum(std.resid^2)/df.residual(bst.UC.glm)
overdispersion
frisk.sum
head(frisk)
head(frisk.sum)
sim1 = rpois(nrow(OUPokemon), lambda = fitted.values(bst.UC.glm))
summary(sim1)
summary(OU$Raw)
summary(OUPokemon$Raw)
sim.df = data.frame(OUPokemon, sim1)
sim.long = sim.df %>% gather(type, number, Raw:sim1)
library(tidyr)
sim.long = sim.df %>% gather(type, number, Raw:sim1)
ggplot(sim.long, aes(x = number)) + geom_histogram() + facet_wrap(~type, ncol = 1)
sim.df = data.frame(OUPokemon$Raw, sim1)
View(sim.df)
sim.long = sim.df %>% gather(type, number, Raw:sim1)
ggplot(sim.long, aes(x = number)) + geom_histogram() + facet_wrap(~type, ncol = 1)
ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram()
ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram()
p1  <- ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram()
grid.arrange(p1, p2)
sim1 = rpois(nrow(OUPokemon), lambda = fitted.values(bst.UC.glm))
constant.glm = glm(Raw ~ 1, family = poisson, data = UberPokemon)
display(constant.glm)
offset.glm = glm(Raw ~ 1, family = poisson, offset = log(BST), data = UberPokemon)
display(offset.glm)
bst.glm = glm(Raw ~ BST, family = poisson, data = UberPokemon)
display(bst.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + Sp.Defense + HP +factor(Usage.Category) + factor(Generation), family = poisson, data = UberPokemon)
deviance(bst.UC.glm)
fitted = fitted.values(bst.UC.glm)
resid = residuals(bst.UC.glm, type = "response")
df = data.frame(UberPokemon, .fitted = fitted, .resid = resid)
ggplot(df, aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
std.resid = resid/sqrt(fitted)
df$.std.resid = std.resid
ggplot(df, aes(x = log(.fitted), y = .std.resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
overdispersion = sum(std.resid^2)/df.residual(bst.UC.glm)
overdispersion
sim1 = rpois(nrow(UberPokemon), lambda = fitted.values(bst.UC.glm))
summary(sim1)
summary(UberPokemon$Raw)
p1  <- ggplot(OUPokemon, aes(x = Raw)) + geom_histogram()
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram()
grid.arrange(p1, p2)
overdispersion = sum(std.resid^2)/df.residual(bst.UC.glm)
overdispersion
sim1 = rpois(nrow(UberPokemon), lambda = fitted.values(bst.UC.glm))
summary(sim1)
summary(UberPokemon$Raw)
p1  <- ggplot(UberPokemon, aes(x = Raw)) + geom_histogram()
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram()
grid.arrange(p1, p2)
p1  <- ggplot(UberPokemon, aes(x = Raw)) + geom_histogram(breaks = seq(0, 200000, 50000))
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram(breaks = seq(0, 200000, 50000))
grid.arrange(p1, p2)
p1  <- ggplot(UberPokemon, aes(x = Raw)) + geom_histogram(breaks = seq(0, 200000, 5000))
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram(breaks = seq(0, 200000, 5000))
grid.arrange(p1, p2)
OverUsedG1 = read.csv('gen1ou-0.txt',skip = 2)
OverUsedG1 = read.csv('gen1ou-0.txt',skip = 2)
OverUsedG1 <- merge(Pokemon.Attributes,OverUsedG1,by="Pokemon")
constant.glm = glm(Raw ~ 1, family = poisson, data = OverUsedG1)
display(constant.glm)
offset.glm = glm(Raw ~ 1, family = poisson, offset = log(BST), data = OverUsedG1)
display(offset.glm)
OverUsedG1 = read.csv('gen1ou-0.txt',skip = 2)
OverUsedG1 <- merge(Pokemon.Attributes,OverUsedG1,by="Pokemon")
constant.glm = glm(Raw ~ 1, family = poisson, data = OverUsedG1)
display(constant.glm)
```
```{r}
offset.glm = glm(Raw ~ 1, family = poisson, offset = log(BST), data = OverUsedG1)
display(offset.glm)
```
```{r}
bst.glm = glm(Raw ~ BST, family = poisson, data = OverUsedG1)
display(bst.glm)
bst.UC.glm = glm(Raw ~ Attack + Defense + Special + Sp.Attack + Sp.Defense + HP +factor(Usage.Category) + factor(Generation), family = poisson, data = OverUsedG1)
deviance(bst.UC.glm)
fitted = fitted.values(bst.UC.glm)
resid = residuals(bst.UC.glm, type = "response")
df = data.frame(OverUsedG1, .fitted = fitted, .resid = resid)
ggplot(df, aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
std.resid = resid/sqrt(fitted)
df$.std.resid = std.resid
ggplot(df, aes(x = log(.fitted), y = .std.resid)) + geom_point() + geom_smooth(span = 1, method.args = list(degree = 1))
overdispersion = sum(std.resid^2)/df.residual(bst.UC.glm)
overdispersion
sim1 = rpois(nrow(OverUsedG1), lambda = fitted.values(bst.UC.glm))
summary(sim1)
summary(OverUsedG1$Raw)
p1  <- ggplot(OverUsedG1, aes(x = Raw)) + geom_histogram(breaks = seq(0, 200000, 5000))
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram(breaks = seq(0, 200000, 5000))
grid.arrange(p1, p2)
p1  <- ggplot(OverUsedG1, aes(x = Raw)) + geom_histogram(breaks = seq(0, 50000, 1000))
p2 <- ggplot(data.frame(sim1), aes(x = sim1)) + geom_histogram(breaks = seq(0, 50000, 1000))
grid.arrange(p1, p2)
ggplot(UberPokemon, aes(x = BST, y = log(Real+1), group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
ggplot(UberPokemon, aes(x = BST, y = Real, group = Generation, color = factor(Generation))) + geom_point() + geom_smooth(method.args = list(degree = 1), se=FALSE)
